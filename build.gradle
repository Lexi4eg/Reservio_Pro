plugins {
    id 'java'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.Kafka.KafkaMain'
        attributes 'Http-Server': 'org.HttpClientEndpoint.HttpClientService'
    }
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.opentelemetry:opentelemetry-api:1.10.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.10.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.10.0'
    implementation 'org.apache.kafka:kafka-clients:3.5.1'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.postgresql:postgresql:42.6.0'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
    implementation 'com.sparkjava:spark-core:2.9.3'
}

tasks.test {
    useJUnitPlatform()
}

task runKafkaMain(type: JavaExec) {
    mainClass = 'org.Kafka.KafkaMain'
    classpath = sourceSets.main.runtimeClasspath
}

task runHttpClientService(type: JavaExec) {
    mainClass = 'org.HttpClientEndpoint.HttpClientService'
    classpath = sourceSets.main.runtimeClasspath
}

task runAll {
    dependsOn runKafkaMain, runHttpClientService
}

runAll {
    doLast {
        println 'Both KafkaMain and HttpClientService have started.'
    }
}